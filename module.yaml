esphome:
  name: bebedouro_pinho
  platform: ESP32
  board: esp32doit-devkit-v1
  on_boot:
    then:
      - lambda: |-
          id(status_msg) = "     INICIANDO     ";

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # manual_ip:
  #   static_ip: 192.168.25.161
  #   gateway: 192.168.25.1
  #   subnet: 255.255.255.0

globals:
  - id: status_msg
    type: std::string
    restore_value: no

logger:

i2c:
  sda: 21
  scl: 22

ota:
  safe_mode: true
  password: animal

captive_portal:

web_server:
  port: 80

time:
  - platform: sntp
    id: current_time
    timezone: UTC+3

text_sensor:
  - platform: wifi_info
    ssid:
      id: wifi_ssid
      name: SSID
      internal: true
    ip_address:
      id: ip_address
      name: Endereço IP
      internal: true

display:
  - platform: lcd_pcf8574
    dimensions: 20x4
    address: 0x3F
    update_interval: 1s
    lambda: |-
      it.printf(0, 0, "   %s", id(ip_address).state.c_str());
      it.strftime(0, 1, "%d.%m.%Y %H:%M:%S", id(current_time).now());
      it.printf(0, 2, "Distancia: %f", id(ultrasonicc).state);
      it.printf(0, 3, "%s", id(status_msg).c_str());

number:
  - platform: template
    name: Distância para Fechar o Registro
    min_value: 0.05
    max_value: 0.20
    step: 0.1
    initial_value: 0.06
    optimistic: true
    mode: box
    id: distancia_fechar_registro

  - platform: template
    name: Distância para Abrir o Registro
    min_value: 0.10
    max_value: 0.20
    step: 0.1
    initial_value: 0.15
    optimistic: true
    mode: box
    id: distancia_abrir_registro

switch:
  - platform: gpio
    id: registro_agua
    name: "Registro de Água"
    pin: 14

sensor:
  - platform: ultrasonic
    id: ultrasonicc
    trigger_pin: 
      number: GPIO27
    echo_pin: 
      number: GPIO26
    name: "Sensor de Distância"
    update_interval: 1s
    filters:
      - filter_out: nan
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1
    on_value_range:
      - below: !lambda "return id(distancia_fechar_registro).state;"
        then:
          - switch.turn_off: registro_agua
          - globals.set:
              id: status_msg
              value: '"      FECHADO      "'

      - above: !lambda "return id(distancia_abrir_registro).state;"
        then:
          - switch.turn_on: registro_agua
          - globals.set:
              id: status_msg
              value: '"      ENCHENDO      "'
